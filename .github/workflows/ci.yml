name: Continuous integration

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Build
        run: yarn run build
        env:
          NODE_ENV: development
          VUE_APP_QGIS_SERVER: https://dev-gis.biip.lt
          VUE_APP_API_HOST: https://dev-internalapi.biip.lt

      - uses: actions/upload-artifact@v4
        with:
          name: page
          path: dist


  # eslint:
  #   name: ESLint
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   permissions:
  #     security-events: write
  #     actions: read
  #     contents: read

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: package.json
  #         cache: yarn

  #     - name: Install dependencies
  #       run: yarn install --immutable --immutable-cache --check-cache

  #     - name: Run ESLint
  #       run: yarn run lint:sarif
  #       continue-on-error: true

  #     - name: Upload ESLint analysis results to GitHub
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: eslint-results.sarif
  #         wait-for-processing: true
  #         category: ESLint

  validate-docker-build:
    name: Validate if docker image builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build & tag docker image
        uses: AplinkosMinisterija/reusable-workflows/.github/actions/docker-build-tag-push@main
        with:
          environment: test
          push: false

  publish-preview:
    name: Publish preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 10
    needs: build-test
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4

      - name: Publish preview to Cloudflare pages
        uses: AplinkosMinisterija/reusable-workflows/.github/actions/cloudflare-pages-publish@main
        with:
          cloudflare-api-token: ${{ secrets.BIIP_CLOUDFLARE_PAGES_API_TOKEN }}
          cloudflare-account-id: ${{ secrets.BIIP_CLOUDFLARE_ACCOUNT_ID }}
          cloudflare-project-name: biip-maps-web
          artifact-name: page
